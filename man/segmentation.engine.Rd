% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Segmentation.R
\name{segmentation.engine}
\alias{segmentation.engine}
\title{Segmentation engine}
\usage{
segmentation.engine(
  obs,
  time = 1:length(obs),
  u = 0 * obs,
  nS = 2,
  nMin = 1,
  nCycles = 100,
  burn = 0.5,
  nSlim = max(nCycles/10, 1),
  temp.folder = file.path(tempdir(), "BaM")
)
}
\arguments{
\item{obs}{real vector, observations}

\item{time}{vector, time in POSIXct, string or numeric format}

\item{u}{real vector, uncertainty in observations (as a standard deviation)}

\item{nS}{integer, number of segments}

\item{nMin}{integer, minimum number of observations by segment}

\item{nCycles}{integer, number of MCMC adaptation cycles. Total number of simulations equal to 100*nCycles}

\item{burn}{real between 0 (included) and 1 (excluded), MCMC burning factor}

\item{nSlim}{integer, MCMC slim step}

\item{temp.folder}{directory, temporary directory to write computations}
}
\value{
List with the following components :
\enumerate{
\item data: data frame, all data with their respective periods after segmentation
\item shift: data frame, all detected shift time in numeric or POSIXct format in UTC
\item tau: real vector, estimated shift times in numeric or POSIXct format in UTC
\item segments: list, segment maximum a posterior (MAP) value indexed by the list number
\item mcmc: data frame, MCMC simulation
\item data.p: list, separate and assign information by identified stable period indexed by the list number
\item DIC: real, DIC estimation
}
}
\description{
Segmentation procedure for a \strong{known} given number of segments
}
\examples{
# Run segmentation engine function at two segments
# for data set : RhoneRiver (further details on ?RhoneRiver)
res=segmentation.engine(obs=RhoneRiver$H,
                        time=RhoneRiver$Year,
                        u=RhoneRiver$uH,nS=2)
# Data information
knitr::kable(head(res$summary$data),
             align = 'c',row.names = FALSE)
# Shift information
knitr::kable(head(res$summary$shift),
             align = 'c',row.names = FALSE)
# Plot segmentation
plotSegmentation(res$summary)
}
