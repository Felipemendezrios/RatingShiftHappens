% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Segmentation.R
\name{segmentation}
\alias{segmentation}
\title{Segmentation}
\usage{
segmentation(
  obs,
  time = 1:length(obs),
  u = 0 * obs,
  nSmax = 2,
  nMin = 1,
  nCycles = 100,
  burn = 0.5,
  nSlim = max(nCycles/10, 1),
  temp.folder = file.path(tempdir(), "BaM")
)
}
\arguments{
\item{obs}{real vector, observations}

\item{time}{real vector, time}

\item{u}{real vector, uncertainty in observations (as a standard deviation)}

\item{nSmax}{integer, maximum number of segments to assess}

\item{nMin}{integer, minimum number of observations by segment}

\item{nCycles}{integer, number of MCMC adaptation cycles. Total number of simulations equal to 100*nCycles.}

\item{burn}{real between 0 (included) and 1 (excluded), MCMC burning factor}

\item{nSlim}{integer, MCMC slim step}

\item{temp.folder}{directory, temporary directory to write computations}
}
\value{
List with the following components :
\enumerate{
  \item tau: real vector, estimated shift times
  \item segments: list, segment mean value indexed by the list number
  \item mcmc: data frame, MCMC simulation
  \item data.p: list, separate and assign information by identified stable period indexed by the list number
  \item DIC: real, DIC estimation
  \item nS: integer, optimal number of segments following DIC criterion
}
}
\description{
Segmentation procedure for a \strong{unknown} given number of segments
}
\examples{
# Create observation vector
obs=c(rnorm(25,mean=0,sd=1),rnorm(25,mean=2,sd=1))

# Run segmentation function
res <- segmentation(obs=obs)

# Optimal number of segments nSopt
nSopt <- res$nS
nSopt

# Estimated shift time
res$results[[nSopt]]$tau

# Uncertainty in shift time
hist(res$results[[nSopt]]$mcmc$tau)

# Separate and assign information by identified stable period
res$results[[nSopt]]$data.p

# DIC estimation
res$results[[nSopt]]$DIC

# Plot
plot(obs)
lines(x=res$results[[res$nS]]$data.p$time.p[[1]],y=res$results[[res$nS]]$segments[[1]],col='blue')
lines(x=res$results[[res$nS]]$data.p$time.p[[2]],y=res$results[[res$nS]]$segments[[2]],col='blue')
abline(v=res$results[[nSopt]]$tau,col='green')
abline(v=quantile(res$results[[nSopt]]$mcmc$tau1,probs=c(0.025,0.975)),col='green',lty=2)
}
