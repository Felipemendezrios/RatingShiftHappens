% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{fitRC_exponential}
\alias{fitRC_exponential}
\title{Fit rating curve using an exponential regression}
\usage{
fitRC_exponential(time, H, Q, uQ)
}
\arguments{
\item{time}{real vector, time}

\item{H}{real vector, stage}

\item{Q}{real vector, discharge}

\item{uQ}{real vector, uncertainty in discharge (as a standard deviation)}
}
\value{
List with the following components :
\enumerate{
\item ResultsResiduals : data frame, results after fitting curve
\itemize{
\item time: real value, time
\item H: real value, stage
\item Q_obs: real value, discharge observed
\item Q_sim: real value, discharge simulated
\item Q_res: real value, residual between discharge observed and simulated
\item uQ_obs: real value, uncertainty in discharge observed (as a standard deviation)
\item uQ_sim: real value, uncertainty in discharge simulated (as a standard deviation)
}
\item parameters : data frame, parameters of the exponential regression expressed \deqn{Q(h)=Q0 \cdot \exp(mu \cdot H)}
\itemize{
\item a : real value, parameter of exponential model regression
\item b : real value, parameter of exponential model regression
}
}
}
\description{
Exponential regression expressed as \deqn{Q(h)=a \cdot \exp(b \cdot H)}
}
\examples{
# Dataset
subset = RhoneRiver[1:20,]

# Exponential regression to estimate a simple rating curve
fit.all=fitRC_exponential(time=subset$Time,H=subset$H,Q=subset$Q,uQ=subset$uQ)

fit=fit.all$ResultsResiduals
fit.param=fit.all$parameters

# Parameters of the exponential regression
fit.param

# plot rating curve with model results
plot(fit$H, fit$Q_obs, ylim = range(c(fit$Q_obs - fit$uQ_obs, fit$Q_obs + fit$uQ_obs)),
     xlab = "H", ylab = "Q_obs")

# Add error bars following uQ_obs
arrows(fit$H, fit$Q_obs - fit$uQ_obs, fit$H, fit$Q_obs + fit$uQ_obs, angle = 90,
       code = 3, length = 0.1)

# Exponential model regression
curve(expr=fit.param$Q0*exp(fit.param$mu*x),from=min(fit$H),to=max(fit$H),col='blue',lwd=2,add=TRUE)

# plot residuals
plot(x=fit$time,y=fit$Q_res, ylim = range(c(fit$Q_res - fit$uQ_obs, fit$Q_res + fit$uQ_obs)),
     xlab='H', ylab='Residual')
arrows(fit$time, fit$Q_res - fit$uQ_obs, fit$time, fit$Q_res + fit$uQ_obs, angle = 90,
       code = 3, length = 0.1)
abline(h=0, col='red')
}
